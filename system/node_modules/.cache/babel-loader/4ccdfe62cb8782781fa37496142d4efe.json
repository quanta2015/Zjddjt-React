{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _defineProperty from \"/Users/manqingchen/Documents/Project/Zjddjt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/manqingchen/Documents/Project/Zjddjt/system/src/app/appy/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Highlighter from 'react-highlight-words';\nimport clone from 'util/clone';\nimport * as DT from 'util/date';\nimport \"./index.less\";\nimport moment from \"moment\";\nimport { toJS } from \"mobx\";\nconst TextArea = _Input.TextArea;\n\nvar _val; // 申请加梯\n\n\nlet Appy = (_dec = inject('appyActions', 'appyStore'), _dec(_class = observer(_class = (_temp = class Appy extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: \"Search \".concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Search\"), React.createElement(_Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Reset\")),\n      filterIcon: filtered => React.createElement(_Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })\n    });\n\n    this.handleSearch = (selectedKeys, confirm) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0]\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.action = this.props.appyActions;\n    this.store = this.props.appyStore;\n    this.state = {\n      loading: false,\n      searchText: ''\n    };\n  }\n\n  async UNSAFE_componentWillMount() {\n    let params = {};\n    this.setState({\n      loading: true\n    });\n    await this.action.getApply(params);\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const loading = this.state.loading;\n    const apply = toJS(this.store.apply);\n    const columns = [{\n      title: '状态',\n      dataIndex: 'stat',\n      filters: [{\n        text: '已审查',\n        value: '已审查'\n      }, {\n        text: '申请中',\n        value: '申请中'\n      }],\n      onFilter: (value, record) => record.stat === value\n    }, {\n      title: '时间',\n      dataIndex: 'apdt',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.apdt - b.apdt,\n      render: dts => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, dts.map(dt => {\n        let year = dt.substr(0, 4);\n        let month = dt.substr(5, 2);\n        let day = dt.substr(7, 2);\n        let ret = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n        return React.createElement(Tag, {\n          color: color,\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, ret);\n      }))\n    }, _objectSpread({\n      title: '申请人',\n      dataIndex: 'name',\n      key: 'name'\n    }, this.getColumnSearchProps('name')), _objectSpread({\n      title: '联系电话',\n      dataIndex: 'phon',\n      key: 'phon'\n    }, this.getColumnSearchProps('phon')), _objectSpread({\n      title: '加梯地址',\n      dataIndex: 'addr',\n      key: 'addr'\n    }, this.getColumnSearchProps('addr')), {\n      title: '功能',\n      key: 'action',\n      render: (text, record) => React.createElement(_Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"\\u540C\\u610F\\u52A0\\u68AF\")\n    }];\n    return React.createElement(\"div\", {\n      className: \"g-appy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"m-appy-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"\\u5BFC\\u51FAExcel\")), React.createElement(_Table, {\n      size: \"small\",\n      dataSource: apply,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), \";\");\n  }\n\n}, _temp)) || _class) || _class);\nexport default _Form.create()(Appy);","map":{"version":3,"sources":["/Users/manqingchen/Documents/Project/Zjddjt/system/src/app/appy/index.js"],"names":["React","observer","inject","Highlighter","clone","DT","moment","toJS","TextArea","_val","Appy","Component","constructor","props","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","state","searchText","setState","action","appyActions","store","appyStore","loading","UNSAFE_componentWillMount","params","getApply","apply","columns","title","filters","stat","defaultSortOrder","sorter","a","b","apdt","dts","map","dt","year","substr","month","day","ret","tag","key","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Input, Tabs, Form, Button,Icon, Table,Divider, Result, Modal, message, Skeleton } from \"antd\";\nimport Highlighter from 'react-highlight-words';\n\nimport clone from 'util/clone'\nimport * as DT  from 'util/date'\n\nimport \"./index.less\";\nimport moment from \"moment\";\nimport { toJS } from \"mobx\";\n\nconst { TextArea } = Input;\nvar _val\n\n// 申请加梯\n@inject('appyActions', 'appyStore')\n@observer\nclass Appy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.action = this.props.appyActions\n    this.store  = this.props.appyStore\n    this.state = {\n      loading: false,\n      searchText: '',\n    }\n  }\n\n \n  async UNSAFE_componentWillMount() {\n    let params = {}\n\n    this.setState({ loading: true })\n    await this.action.getApply(params)\n    this.setState({ loading: false })\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => (\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[this.state.searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n    ),\n  });\n\n  handleSearch = (selectedKeys, confirm) => {\n    confirm();\n    this.setState({ searchText: selectedKeys[0] });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n\n\n  render() {\n    const {loading} = this.state\n    const apply = toJS(this.store.apply)\n    const columns = [{\n        title: '状态',\n        dataIndex: 'stat',\n        filters: [\n          {\n            text: '已审查',\n            value:'已审查',\n          },{\n            text: '申请中',\n            value: '申请中',\n          }\n        ],\n        onFilter: (value, record) => record.stat  === value\n      },{\n        title: '时间',\n        dataIndex: 'apdt',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.apdt - b.apdt,\n\n        render: dts => \n          <span>\n          {dts.map(dt => {\n              let year  = dt.substr(0,4)\n              let month = dt.substr(5,2)\n              let day   = dt.substr(7,2)\n              let ret  = `${year}-${month}-${day}`\n              return (\n                <Tag color={color} key={tag}>\n                  {ret}\n                </Tag>\n              );\n            })}\n          </span>,\n      },{\n        title: '申请人',\n        dataIndex: 'name',\n        key: 'name',\n        ...this.getColumnSearchProps('name'),\n      },{\n        title: '联系电话',\n        dataIndex: 'phon',\n        key: 'phon',\n        ...this.getColumnSearchProps('phon'),\n      },{\n        title: '加梯地址',\n        dataIndex: 'addr',\n        key: 'addr',\n        ...this.getColumnSearchProps('addr'),\n      },{\n        title: '功能',\n        key: 'action',\n        render: (text, record) => (\n          <Button type=\"primary\">同意加梯</Button>\n        ),\n      },\n    ];\n\n\n    return (\n      <div className='g-appy'>\n        <div className=\"m-appy-menu\">\n          <Button type=\"primary\">导出Excel</Button>\n        </div>\n        <Table size='small' dataSource={apply} columns={columns} />;\n      </div>\n    )\n  }\n}\n\n\nexport default Form.create()(Appy);\n"]},"metadata":{},"sourceType":"module"}