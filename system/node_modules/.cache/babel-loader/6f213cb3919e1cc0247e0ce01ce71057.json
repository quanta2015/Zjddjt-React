{"ast":null,"code":"import { toJS } from 'mobx';\nimport request from '../../util/request';\nimport { param } from '../../util/param';\nexport default class BaseActions {\n  constructor(store) {\n    this.get = async (api = '', params = {}, allRes) => {\n      let url;\n\n      if (api.indexOf('?') === -1) {\n        url = api + \"?\".concat(param(params));\n      } else {\n        url = api + \"&\".concat(param(params));\n      }\n\n      let data = await request(url, {}, allRes);\n      return toJS(data);\n    };\n\n    this.post = async (api, data, allRes) => {\n      return await request(api, {\n        method: 'POST',\n        data\n      }, allRes);\n    };\n\n    this.store = store;\n  }\n\n}","map":{"version":3,"sources":["/Users/manqingchen/Documents/Project/Zjddjt/system/src/component/BaseActions/index.js"],"names":["toJS","request","param","BaseActions","constructor","store","get","api","params","allRes","url","indexOf","data","post","method"],"mappings":"AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,eAAe,MAAMC,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA,SAInBC,GAJmB,GAIb,OAAOC,GAAG,GAAG,EAAb,EAAiBC,MAAM,GAAG,EAA1B,EAA8BC,MAA9B,KAAyC;AAC7C,UAAIC,GAAJ;;AACA,UAAIH,GAAG,CAACI,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAC3BD,QAAAA,GAAG,GAAGH,GAAG,cAAOL,KAAK,CAACM,MAAD,CAAZ,CAAT;AACD,OAFD,MAEO;AACLE,QAAAA,GAAG,GAAGH,GAAG,cAAOL,KAAK,CAACM,MAAD,CAAZ,CAAT;AACD;;AACD,UAAII,IAAI,GAAG,MAAMX,OAAO,CAACS,GAAD,EAAM,EAAN,EAAUD,MAAV,CAAxB;AACA,aAAOT,IAAI,CAACY,IAAD,CAAX;AACD,KAbkB;;AAAA,SAenBC,IAfmB,GAeZ,OAAON,GAAP,EAAYK,IAAZ,EAAkBH,MAAlB,KAA6B;AAClC,aAAO,MAAMR,OAAO,CAClBM,GADkB,EAElB;AACEO,QAAAA,MAAM,EAAE,MADV;AAEEF,QAAAA;AAFF,OAFkB,EAMlBH,MANkB,CAApB;AAQD,KAxBkB;;AACjB,SAAKJ,KAAL,GAAaA,KAAb;AACD;;AAH8B","sourcesContent":["import { toJS } from 'mobx'\nimport request from '../../util/request'\nimport { param } from '../../util/param'\n\nexport default class BaseActions {\n  constructor(store) {\n    this.store = store\n  }\n\n  get = async (api = '', params = {}, allRes) => {\n    let url\n    if (api.indexOf('?') === -1) {\n      url = api + `?${param(params)}`\n    } else {\n      url = api + `&${param(params)}`\n    }\n    let data = await request(url, {}, allRes)\n    return toJS(data)\n  }\n\n  post = async (api, data, allRes) => {\n    return await request(\n      api,\n      {\n        method: 'POST',\n        data\n      },\n      allRes\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}