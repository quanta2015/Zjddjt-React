{"ast":null,"code":"import _applyDecoratedDescriptor from \"/Users/manqingchen/Documents/Project/Zjddjt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { action, observable, runInAction, toJS } from \"mobx\";\nimport BaseActions from 'component/BaseActions';\nimport * as urls from 'constant/urls';\nimport store from '../store';\nlet BradStore = (_class = class BradStore extends BaseActions {\n  constructor(store) {\n    super();\n    this.store = store;\n  }\n\n  async getBrandAll() {\n    let r = await this.get(urls.API_BRAND_ALL, {}, true);\n\n    if (r && r.code === 200) {\n      runInAction(() => {\n        this.store.brandAll = r.data;\n      });\n    }\n\n    return r;\n  }\n\n}, (_applyDecoratedDescriptor(_class.prototype, \"getBrandAll\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getBrandAll\"), _class.prototype)), _class);\nexport default new BradStore(store);","map":{"version":3,"sources":["/Users/manqingchen/Documents/Project/Zjddjt/wechat/src/model/brad/action/index.js"],"names":["action","observable","runInAction","toJS","BaseActions","urls","store","BradStore","constructor","getBrandAll","r","get","API_BRAND_ALL","code","brandAll","data"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,WAA7B,EAA0CC,IAA1C,QAAsD,MAAtD;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;IAEMC,S,aAAN,MAAMA,SAAN,SAAwBH,WAAxB,CAAoC;AAClCI,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACjB;AACA,SAAKA,KAAL,GAAaA,KAAb;AACD;;AAED,QACMG,WADN,GACoB;AAClB,QAAIC,CAAC,GAAG,MAAM,KAAKC,GAAL,CAASN,IAAI,CAACO,aAAd,EAA6B,EAA7B,EAAgC,IAAhC,CAAd;;AACA,QAAIF,CAAC,IAAIA,CAAC,CAACG,IAAF,KAAW,GAApB,EAAyB;AACvBX,MAAAA,WAAW,CAAC,MAAM;AAChB,aAAKI,KAAL,CAAWQ,QAAX,GAAsBJ,CAAC,CAACK,IAAxB;AACD,OAFU,CAAX;AAGD;;AACD,WAAOL,CAAP;AACD;;AAfiC,C,+DAMjCV,M;AAaH,eAAe,IAAIO,SAAJ,CAAcD,KAAd,CAAf","sourcesContent":["import { action, observable, runInAction, toJS } from \"mobx\";\nimport BaseActions from 'component/BaseActions'\nimport * as urls from 'constant/urls'\nimport store from '../store'\n\nclass BradStore extends BaseActions {\n  constructor(store) {\n    super()\n    this.store = store\n  }\n\n  @action\n  async getBrandAll() {\n    let r = await this.get(urls.API_BRAND_ALL, {},true)\n    if (r && r.code === 200) {\n      runInAction(() => {\n        this.store.brandAll = r.data\n      })\n    }\n    return r\n  }\n\n}\n\nexport default new BradStore(store)\n"]},"metadata":{},"sourceType":"module"}