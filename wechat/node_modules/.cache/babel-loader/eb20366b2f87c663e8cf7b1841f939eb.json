{"ast":null,"code":"import \"antd/es/skeleton/style\";\nimport _Skeleton from \"antd/es/skeleton\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/manqingchen/Documents/Project/Zjddjt/wechat/src/app/brad/index.js\";\n\nimport React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport \"./index.less\";\nimport { toJS } from \"mobx\";\nlet Brad = (_dec = inject(\"bradActions\", \"bradStore\"), _dec(_class = observer(_class = (_temp = class Brad extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.msgCopy = () => {\n      _message.success(\"复制成功\", 0.5);\n    };\n\n    this.action = this.props.bradActions;\n    this.store = this.props.bradStore;\n    this.state = {\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    await this.action.getBrandAll();\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    let list = toJS(getValue(this.store.store, \"brandAll\", []));\n    return React.createElement(\"div\", {\n      className: \"g-brad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(_Skeleton, {\n      active: true,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, list && list.map((item, index) => React.createElement(\"div\", {\n      className: \"m-detail-wrap\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, item.name), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u8054\\u7CFB\\u4EBA:\"), item.contact), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u8054\\u7CFB\\u65B9\\u5F0F:\"), item.phone.split(\" \").map((p, i) => React.createElement(\"li\", {\n      key: \"phone-\".concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, p))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u53EF\\u63D0\\u4F9B\\u7535\\u68AF\\u7C7B\\u522B:\"), item.type)), React.createElement(\"div\", {\n      className: \"icon-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.icon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))))));\n  }\n\n}, _temp)) || _class) || _class);\nexport default Brad;","map":{"version":3,"sources":["/Users/manqingchen/Documents/Project/Zjddjt/wechat/src/app/brad/index.js"],"names":["React","observer","inject","toJS","Brad","Component","constructor","props","msgCopy","success","action","bradActions","store","bradStore","state","loading","componentDidMount","setState","getBrandAll","render","list","getValue","map","item","index","name","contact","phone","split","p","i","type","icon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport \"./index.less\";\nimport { Skeleton, message } from \"antd\";\nimport { toJS } from \"mobx\";\n\n@inject(\"bradActions\", \"bradStore\")\n@observer\nclass Brad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.action = this.props.bradActions;\n    this.store = this.props.bradStore;\n    this.state = {\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    await this.action.getBrandAll();\n    this.setState({ loading: false });\n  }\n\n  msgCopy = () => {\n    message.success(\"复制成功\", 0.5);\n  };\n\n  render() {\n    let list = toJS(getValue(this.store.store, \"brandAll\", []));\n\n    return (\n      <div className='g-brad'>\n        <Skeleton active loading={this.state.loading}>\n          {list && list.map((item, index) => (\n              <div className='m-detail-wrap' key={index}>\n                <div className=\"info\">\n                  <div className='title'>\n                    {item.name}\n                  </div>\n\n                  <div className='content'>\n                    <h4>联系人:</h4>\n                    {item.contact}\n                  </div>\n\n                  <div className='content'>\n                    <h4>联系方式:</h4>\n                    {item.phone.split(\" \").map((p, i) =>\n                      <li key={`phone-${i}`}>\n                        {p}\n\n\n                      </li>\n                    )}\n                  </div>\n\n                  <div className='content'>\n                    <h4>可提供电梯类别:</h4>\n                    {item.type}\n                  </div>\n\n                </div>\n\n                <div className='icon-wrap'>\n                  <img src={item.icon} alt=\"\"/>\n                </div>\n\n              </div>\n            )\n          )}\n        </Skeleton>\n      </div>\n    );\n  }\n}\n\nexport default Brad;\n"]},"metadata":{},"sourceType":"module"}