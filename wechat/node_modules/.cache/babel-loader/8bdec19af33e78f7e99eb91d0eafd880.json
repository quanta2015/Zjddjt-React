{"ast":null,"code":"import moment from 'moment';\nimport cheerio from 'cheerio';\n\nlet prefixInteger = (num, length) => {\n  let len = num.toString().length;\n  num = len < 2 ? '0' + num : num;\n  return num;\n};\n\nexport let formatDate = date => {\n  return moment(date).format(\"YYYY/MM/DD\");\n};\nexport let newDateTime = date => {\n  return moment(new Date()).format(\"YYYYMMDDhhmmss\");\n};\nexport let newDate = () => {\n  return moment(new Date()).format(\"YYYY/MM/DD\");\n}; // '2019/06/01 16:00:09'   =>  20190601\n\nexport let convertD2I = date => {\n  return parseInt(formatDate(date).split('/').join(''));\n}; // 20190601  =>   MOMENT('2019/06/01')\n\nexport let convertI2D = date => {\n  let _date = date + '';\n\n  let year = _date.substring(0, 4);\n\n  let month = prefixInteger(_date.substring(4, 6), 2);\n  let day = prefixInteger(_date.substring(6, 8), 2);\n  return moment(\"\".concat(year, \"/\").concat(month, \"/\").concat(day), 'YYYY/MM/DD');\n}; // 20190601  =>   '2019/06/01'\n\nexport let convertI2S = date => {\n  let _date = date + '';\n\n  let year = _date.substring(0, 4);\n\n  let month = prefixInteger(_date.substring(4, 6), 2);\n  let day = prefixInteger(_date.substring(6, 8), 2);\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n};\nexport let html2RagDate = html => {\n  const $ = cheerio.load(html);\n  let ret = [];\n  ret.push($('input')[0].attribs.value);\n  ret.push($('input')[1].attribs.value);\n  return ret;\n};","map":{"version":3,"sources":["/Users/manqingchen/Documents/Project/Zjddjt/wechat/src/util/date.js"],"names":["moment","cheerio","prefixInteger","num","length","len","toString","formatDate","date","format","newDateTime","Date","newDate","convertD2I","parseInt","split","join","convertI2D","_date","year","substring","month","day","convertI2S","html2RagDate","html","$","load","ret","push","attribs","value"],"mappings":"AAAA,OAAOA,MAAP,MAAoB,QAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAGA,IAAIC,aAAa,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACpC,MAAIC,GAAG,GAAGF,GAAG,CAACG,QAAJ,GAAeF,MAAzB;AACAD,EAAAA,GAAG,GAAIE,GAAG,GAAC,CAAL,GAAU,MAAIF,GAAd,GAAmBA,GAAzB;AACE,SAAOA,GAAP;AACA,CAJH;;AAOA,OAAO,IAAII,UAAU,GAAIC,IAAD,IAAU;AAChC,SAAOR,MAAM,CAACQ,IAAD,CAAN,CAAaC,MAAb,CAAoB,YAApB,CAAP;AACD,CAFM;AAIP,OAAO,IAAIC,WAAW,GAAIF,IAAD,IAAU;AACjC,SAAOR,MAAM,CAAC,IAAIW,IAAJ,EAAD,CAAN,CAAmBF,MAAnB,CAA0B,gBAA1B,CAAP;AACD,CAFM;AAKP,OAAO,IAAIG,OAAO,GAAG,MAAM;AACzB,SAAOZ,MAAM,CAAC,IAAIW,IAAJ,EAAD,CAAN,CAAmBF,MAAnB,CAA0B,YAA1B,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAII,UAAU,GAAIL,IAAD,IAAU;AACjC,SAAOM,QAAQ,CAACP,UAAU,CAACC,IAAD,CAAV,CAAiBO,KAAjB,CAAuB,GAAvB,EAA4BC,IAA5B,CAAiC,EAAjC,CAAD,CAAf;AACA,CAFM,C,CAIP;;AACA,OAAO,IAAIC,UAAU,GAAIT,IAAD,IAAU;AAChC,MAAIU,KAAK,GAAGV,IAAI,GAAG,EAAnB;;AACA,MAAIW,IAAI,GAAID,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAkB,CAAlB,CAAZ;;AACA,MAAIC,KAAK,GAAGnB,aAAa,CAACgB,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAkB,CAAlB,CAAD,EAAuB,CAAvB,CAAzB;AACA,MAAIE,GAAG,GAAKpB,aAAa,CAACgB,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAkB,CAAlB,CAAD,EAAuB,CAAvB,CAAzB;AACA,SAAOpB,MAAM,WAAImB,IAAJ,cAAYE,KAAZ,cAAqBC,GAArB,GAA2B,YAA3B,CAAb;AACD,CANM,C,CASP;;AACA,OAAO,IAAIC,UAAU,GAAIf,IAAD,IAAU;AAChC,MAAIU,KAAK,GAAGV,IAAI,GAAG,EAAnB;;AACA,MAAIW,IAAI,GAAID,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAkB,CAAlB,CAAZ;;AACA,MAAIC,KAAK,GAAGnB,aAAa,CAACgB,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAkB,CAAlB,CAAD,EAAuB,CAAvB,CAAzB;AACA,MAAIE,GAAG,GAAKpB,aAAa,CAACgB,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAkB,CAAlB,CAAD,EAAuB,CAAvB,CAAzB;AACA,mBAAWD,IAAX,cAAmBE,KAAnB,cAA4BC,GAA5B;AACD,CANM;AASP,OAAO,IAAIE,YAAY,GAAIC,IAAD,IAAU;AAClC,QAAMC,CAAC,GAAGzB,OAAO,CAAC0B,IAAR,CAAaF,IAAb,CAAV;AACA,MAAIG,GAAG,GAAG,EAAV;AACAA,EAAAA,GAAG,CAACC,IAAJ,CAASH,CAAC,CAAC,OAAD,CAAD,CAAW,CAAX,EAAcI,OAAd,CAAsBC,KAA/B;AACAH,EAAAA,GAAG,CAACC,IAAJ,CAASH,CAAC,CAAC,OAAD,CAAD,CAAW,CAAX,EAAcI,OAAd,CAAsBC,KAA/B;AACA,SAAOH,GAAP;AACD,CANM","sourcesContent":["import moment  from 'moment'\nimport cheerio from 'cheerio'\n\n\nlet prefixInteger = (num, length) => {\n\tlet len = num.toString().length \n\tnum = (len<2)? ('0'+num):num\n   return num\n  }\n\n\nexport let formatDate = (date) => {\n  return moment(date).format(\"YYYY/MM/DD\")\n}\n\nexport let newDateTime = (date) => {\n  return moment(new Date()).format(\"YYYYMMDDhhmmss\")\n}\n\n\nexport let newDate = () => {\n  return moment(new Date()).format(\"YYYY/MM/DD\")\n}\n\n// '2019/06/01 16:00:09'   =>  20190601\nexport let convertD2I = (date) => {\n return\tparseInt(formatDate(date).split('/').join(''))\n}\n\n// 20190601  =>   MOMENT('2019/06/01')\nexport let convertI2D = (date) => {\n  let _date = date + ''\n  let year  = _date.substring(0,4)\n  let month = prefixInteger(_date.substring(4,6), 2)\n  let day   = prefixInteger(_date.substring(6,8), 2)\n  return\tmoment(`${year}/${month}/${day}`,'YYYY/MM/DD')\n}\n\n\n// 20190601  =>   '2019/06/01'\nexport let convertI2S = (date) => {\n  let _date = date + ''\n  let year  = _date.substring(0,4)\n  let month = prefixInteger(_date.substring(4,6), 2)\n  let day   = prefixInteger(_date.substring(6,8), 2)\n  return  `${year}-${month}-${day}`\n}\n\n\nexport let html2RagDate = (html) => {\n  const $ = cheerio.load(html)\n  let ret = []\n  ret.push($('input')[0].attribs.value)\n  ret.push($('input')[1].attribs.value)\n  return ret\n}"]},"metadata":{},"sourceType":"module"}